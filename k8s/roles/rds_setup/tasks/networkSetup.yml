---

#K8s VPC Info
- name: Fetching K8s VPC Info
  ec2_vpc_net_info:
    filters:
      tag:Name: "{{ k8s_vpc_name }}"
  register: k8s_vpc

# Getting AZ
- name: Retrieve all AZ in region {{ region }}
  aws_az_facts:
    region: "{{ region }}"
  register: regions_azs

# Creating VPC
- name: Create RDS VPC
  ec2_vpc_net:
    name: "{{ vpc_name}}"
    region: "{{ region }}"
    cidr_block: "{{ vpc_cidr }}"
    dns_hostnames: yes
    dns_support: yes
    state: "present"
  register: vpc

# Setting VPC ID in a variable
- name: Set RDS VPC ID in variable
  set_fact:
    vpc_id: "{{ vpc.vpc.id }}"

# Creating Subnet 1
- name: Create RDS Subnet1
  ec2_vpc_subnet:
    state: present
    region: "{{ region }}"
    az: "{{ regions_azs.availability_zones[0].zone_name }}"
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ subnet_cidr_1 }}"
    map_public: yes
    resource_tags:
      Name: "{{ subnet_name_1 }}"
  register: subnet1

# Creating Subnet 2
- name: Create RDS Subnet2
  ec2_vpc_subnet:
    state: present
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
    az: "{{ regions_azs.availability_zones[1].zone_name }}"
    cidr: "{{ subnet_cidr_2 }}"
    map_public: yes
    resource_tags:
      Name: "{{ subnet_name_2 }}"
  register: subnet2

# Creating Db Subnet group
- name: create RDS subnet group
  rds_subnet_group:
    name: "{{ subnet_group_name }}"
    description: subnet group for rds instance
    state: present
    region: "{{ region }}"
    subnets:
      - "{{ subnet1.subnet.id }}"
      - "{{ subnet2.subnet.id }}"
  register: rds_subnet_group

# Creating DB Security Group 
- name: Create RDS Security Group
  ec2_group:
    name: "{{ securitygroup_name }}"
    description: RDS Security Group
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
    rules:
      - proto: tcp
        from_port: 3306
        to_port: 3306
        cidr_ip: "{{ k8s_vpc.vpcs[0].cidr_block }}"
    tags:
      Name: "{{ securitygroup_name }}"
  register: db_security_group

# Creating Internet Gateway
- name: Create IGW
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    state: "present"
    tags:
      Name: "{{ igw_name }}"
  register: igw

# Creating Routing table and Attaching it to subnet and Internet Gateway
- name: Create Route Table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    subnets:
    - "{{ subnet1.subnet.id }}"
    - "{{ subnet2.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id  }}"
    tags:
      Name: "{{ route_name }}"

...